|--------------------------------------------------------------|
|- ispLEVER Classic 2.1.00.02.49.20 Fitter Report File        -|
|- Copyright(C), 1992-2012, Lattice Semiconductor Corporation -|
|- All Rights Reserved.                                       -|
|--------------------------------------------------------------|




The Basic/Detailed Report Format can be selected in the dialog box
Tools->Fitter Report File Format...

Project_Summary
~~~~~~~~~~~~~~~
Project Name         :  lab10
Project Path         :  E:\Grade-3_2\ISP_Project\lab10
Project Fitted on    :  Sun May 08 13:33:10 2016

Device               :  M4256_64
Package              :  100
GLB Input Mux Size   :  33
Available Blocks     :  16
Speed                :  -7.5
Part Number          :  LC4256V-75T100I
Source Format        :  Pure_Verilog_HDL


// Project 'lab10' Fit Successfully! //


Compilation_Times
~~~~~~~~~~~~~~~~~
Prefit Time                     0 secs
Load Design Time                0.06 secs
Partition Time                  0.05 secs
Place Time                      0.00 secs
Route Time                      0.00 secs
Total Fit Time                  00:00:01


Design_Summary
~~~~~~~~~~~~~~
Total Input Pins                5
Total Logic Functions           51
  Total Output Pins             11
  Total Bidir I/O Pins          0
  Total Buried Nodes            40
Total Flip-Flops                38
  Total D Flip-Flops            30
  Total T Flip-Flops            0
  Total Latches                 8
Total Product Terms             264

Total Reserved Pins             0
Total Locked Pins               16
Total Locked Nodes              0

Total Unique Output Enables     0
Total Unique Clocks             5
Total Unique Clock Enables      2
Total Unique Resets             1
Total Unique Presets            1

Fmax Logic Levels               2


Device_Resource_Summary
~~~~~~~~~~~~~~~~~~~~~~~
                                 Device
                                 Total    Used   Not Used   Utilization
-----------------------------------------------------------------------
Dedicated Pins
  Clock/Input Pins                  4        2      2    -->    50
  Input-Only Pins                   6        0      6    -->     0
  I/O / Enable Pins                 2        0      2    -->     0
I/O Pins                           62       14     48    -->    22
Logic Functions                   256       51    205    -->    19
  Input Registers                  64        0     64    -->     0

GLB Inputs                        576      166    410    -->    28
Logical Product Terms            1280      211   1069    -->    16
Occupied GLBs                      16       16      0    -->   100
Macrocells                        256       51    205    -->    19

Control Product Terms:
  GLB Clock/Clock Enables          16       12      4    -->    75
  GLB Reset/Presets                16        0     16    -->     0
  Macrocell Clocks                256        9    247    -->     3
  Macrocell Clock Enables         256        0    256    -->     0
  Macrocell Enables               256        0    256    -->     0
  Macrocell Resets                256        0    256    -->     0
  Macrocell Presets               256        0    256    -->     0

Global Routing Pool               324       43    281    -->    13
  GRP from IFB                     ..        3     ..    -->    ..
    (from input signals)           ..        3     ..    -->    ..
    (from output signals)          ..        0     ..    -->    ..
    (from bidir signals)           ..        0     ..    -->    ..
  GRP from MFB                     ..       40     ..    -->    ..
----------------------------------------------------------------------

<Note> 1 : The available PT is the product term that has not been used.
<Note> 2 : IFB is I/O feedback.
<Note> 3 : MFB is macrocell feedback.



GLB_Resource_Summary
~~~~~~~~~~~~~~~~~~~~
                                                                                     # of PT
               ---  Fanin  ---    I/O    Input  Macrocells       Macrocells   Logic  clusters
             Unique Shared Total  Pins    Regs Used Inaccessible  available    PTs   used
-------------------------------------------------------------------------------------------
Maximum
  GLB                      36      *(1)     8   --     --             16       80       16
-------------------------------------------------------------------------------------------
  GLB    A     10     0    10      0/4      0    1      0             15       13        3
  GLB    B     10     0    10      0/4      0    1      0             15       13        3
  GLB    C      2    12    14      2/4      0    5      0             11       21        7
  GLB    D     11     3    14      0/4      0    2      0             14       13        4
-------------------------------------------------------------------------------------------
  GLB    E      0     9     9      0/4      0    3      0             13        8        3
  GLB    F     13     0    13      0/4      0    1      0             15       13        3
  GLB    G     13     0    13      0/4      0    1      0             15       13        3
  GLB    H      0     9     9      0/4      0    4      0             12        8        4
-------------------------------------------------------------------------------------------
  GLB    I      0    14    14      0/4      0    8      0              8       24        8
  GLB    J      1    14    15      1/4      0    9      0              7       25        9
  GLB    K      4     2     6      3/4      0    3      0             13        6        3
  GLB    L      0     6     6      3/4      0    3      0             13       13        3
-------------------------------------------------------------------------------------------
  GLB    M      0     6     6      3/4      0    3      0             13       10        3
  GLB    N     13     0    13      1/4      0    3      0             13       14        5
  GLB    O     11     1    12      1/4      0    3      0             13       15        5
  GLB    P      2     0     2      0/4      0    1      0             15        2        1
-------------------------------------------------------------------------------------------
TOTALS:        90    76   166     14/64     0   51      0            205      211       67

<Note> 1 : For ispMACH 4000 devices, the number of IOs depends on the GLB.
<Note> 2 : Four rightmost columns above reflect last status of the placement process.



GLB_Control_Summary
~~~~~~~~~~~~~~~~~~~
           Shared Shared | Mcell  Mcell  Mcell  Mcell  Mcell 
           Clk/CE Rst/Pr | Clock  CE     Enable Reset  Preset
------------------------------------------------------------------------------
Maximum
  GLB        1      1        16     16     16     16     16  
==============================================================================
  GLB    A   1      0         0      0      0      0      0
  GLB    B   1      0         0      0      0      0      0
  GLB    C   1      0         1      0      0      0      0
  GLB    D   1      0         0      0      0      0      0
------------------------------------------------------------------------------
  GLB    E   1      0         0      0      0      0      0
  GLB    F   1      0         0      0      0      0      0
  GLB    G   1      0         0      0      0      0      0
  GLB    H   1      0         0      0      0      0      0
------------------------------------------------------------------------------
  GLB    I   1      0         4      0      0      0      0
  GLB    J   1      0         4      0      0      0      0
  GLB    K   0      0         0      0      0      0      0
  GLB    L   0      0         0      0      0      0      0
------------------------------------------------------------------------------
  GLB    M   0      0         0      0      0      0      0
  GLB    N   1      0         0      0      0      0      0
  GLB    O   1      0         0      0      0      0      0
  GLB    P   0      0         0      0      0      0      0
------------------------------------------------------------------------------

<Note> 1 : For ispMACH 4000 devices, the number of output enables depends on the GLB.



Optimizer_and_Fitter_Options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Pin Assignment :                       Yes
Group Assignment :                     No
Pin Reservation :                      No

@Ignore_Project_Constraints :
  Pin Assignments :                    No
      Keep Block Assignment            --
      Keep Segment Assignment          --
  Group Assignments :                  No
  Macrocell Assignment :               No
      Keep Block Assignment            --
      Keep Segment Assignment          --

@Backannotate_Project_Constraints
  Pin Assignments :                    No
  Pin And Block Assignments :          No
  Pin, Macrocell and Block :           No

@Timing_Constraints :                  No

@Global_Project_Optimization :
  Balanced Partitioning :              Yes
  Spread Placement :                   Yes

  Note :
    Pack Design :
       Balanced Partitioning = No
       Spread Placement      = No
    Spread Design :
       Balanced Partitioning = Yes
       Spread Placement      = Yes


@Logic_Synthesis :
  Logic Reduction :                    Yes
  Node Collapsing :                    FMAX
  Fmax_Logic_Level :                   1
  D/T Synthesis :                      Yes
  XOR Synthesis :                      Yes
  Max. P-Term for Collapsing :         16
  Max. P-Term for Splitting :          80
  Max Symbols :                        24

@Utilization_options
  Max. % of Macrocells used :          100
@Usercode                               (HEX)
@IO_Types                              Default = LVCMOS18 (2)
@Output_Slew_Rate                      Default = FAST (2)
@Power                                 Default = HIGH (2)
@Pull                                  Default = PULLUP_UP (2)
@Fast_Bypass                           Default = None (2)
@ORP_Bypass                            Default = None
@Input_Registers                       Default = None (2)
@Register_Powerup                      Default = None

Device Options:
<Note> 1 : Reserved unused I/Os can be independently driven to Low or High, and does not
           follow the drive level set for the Global Configure Unused I/O Option.
<Note> 2 : For user-specified constraints on individual signals, refer to the Output,
           Bidir and Buried Signal Lists.



Pinout_Listing
~~~~~~~~~~~~~~
      | Pin   | Bank |GLB |Assigned|                 | Signal|
Pin No| Type  |Number|Pad |Pin     |     I/O Type    | Type  | Signal name
----------------------------------------------------------------------------------------
1     | GND   |   -  |    |        |                 |       |
2     | TDI   |   -  |    |        |                 |       |
3     |  I_O  |   0  |C12 |    *   |LVCMOS18         | Input |keyClock
4     |  I_O  |   0  |C10 |    *   |LVCMOS18         | Input |keyData
5     |  I_O  |   0  |C6  |        |                 |       |
6     |  I_O  |   0  |C2  |        |                 |       |
7     |GNDIO0 |   -  |    |        |                 |       |
8     |  I_O  |   0  |D12 |        |                 |       |
9     |  I_O  |   0  |D10 |        |                 |       |
10    |  I_O  |   0  |D6  |        |                 |       |
11    |  I_O  |   0  |D4  |        |                 |       |
12    | IN0   |   0  |    |        |                 |       |
13    |VCCIO0 |   -  |    |        |                 |       |
14    |  I_O  |   0  |E4  |        |                 |       |
15    |  I_O  |   0  |E6  |        |                 |       |
16    |  I_O  |   0  |E10 |        |                 |       |
17    |  I_O  |   0  |E12 |        |                 |       |
18    |GNDIO0 |   -  |    |        |                 |       |
19    |  I_O  |   0  |F2  |        |                 |       |
20    |  I_O  |   0  |F6  |        |                 |       |
21    |  I_O  |   0  |F10 |        |                 |       |
22    |  I_O  |   0  |F12 |        |                 |       |
23    | IN1   |   0  |    |        |                 |       |
24    | TCK   |   -  |    |        |                 |       |
25    | VCC   |   -  |    |        |                 |       |
26    | GND   |   -  |    |        |                 |       |
27    | IN2   |   0  |    |        |                 |       |
28    |  I_O  |   0  |G12 |        |                 |       |
29    |  I_O  |   0  |G10 |        |                 |       |
30    |  I_O  |   0  |G6  |        |                 |       |
31    |  I_O  |   0  |G2  |        |                 |       |
32    |GNDIO0 |   -  |    |        |                 |       |
33    |VCCIO0 |   -  |    |        |                 |       |
34    |  I_O  |   0  |H12 |        |                 |       |
35    |  I_O  |   0  |H10 |        |                 |       |
36    |  I_O  |   0  |H6  |        |                 |       |
37    |  I_O  |   0  |H2  |        |                 |       |
38    |INCLK1 |   0  |    |        |                 |       |
39    |INCLK2 |   1  |    |    *   |LVCMOS18         | Input |clkl
40    | VCC   |   -  |    |        |                 |       |
41    |  I_O  |   1  |I2  |        |                 |       |
42    |  I_O  |   1  |I6  |        |                 |       |
43    |  I_O  |   1  |I10 |        |                 |       |
44    |  I_O  |   1  |I12 |        |                 |       |
45    |VCCIO1 |   -  |    |        |                 |       |
46    |GNDIO1 |   -  |    |        |                 |       |
47    |  I_O  |   1  |J2  |        |                 |       |
48    |  I_O  |   1  |J6  |        |                 |       |
49    |  I_O  |   1  |J10 |    *   |LVCMOS18         | Input |reset
50    |  I_O  |   1  |J12 |        |                 |       |
51    | GND   |   -  |    |        |                 |       |
52    | TMS   |   -  |    |        |                 |       |
53    |  I_O  |   1  |K12 |        |                 |       |
54    |  I_O  |   1  |K10 |    *   |LVCMOS18         | Output|LEDVCC_0_
55    |  I_O  |   1  |K6  |    *   |LVCMOS18         | Output|LEDVCC_1_
56    |  I_O  |   1  |K2  |    *   |LVCMOS18         | Output|show_5_
57    |GNDIO1 |   -  |    |        |                 |       |
58    |  I_O  |   1  |L12 |    *   |LVCMOS18         | Output|show_0_
59    |  I_O  |   1  |L10 |        |                 |       |
60    |  I_O  |   1  |L6  |    *   |LVCMOS18         | Output|show_1_
61    |  I_O  |   1  |L4  |    *   |LVCMOS18         | Output|show_6_
62    | IN3   |   1  |    |        |                 |       |
63    |VCCIO1 |   -  |    |        |                 |       |
64    |  I_O  |   1  |M4  |    *   |LVCMOS18         | Output|show_3_
65    |  I_O  |   1  |M6  |    *   |LVCMOS18         | Output|show_2_
66    |  I_O  |   1  |M10 |    *   |LVCMOS18         | Output|show_4_
67    |  I_O  |   1  |M12 |        |                 |       |
68    |GNDIO1 |   -  |    |        |                 |       |
69    |  I_O  |   1  |N2  |        |                 |       |
70    |  I_O  |   1  |N6  |        |                 |       |
71    |  I_O  |   1  |N10 |        |                 |       |
72    |  I_O  |   1  |N12 |    *   |LVCMOS18         | Output|LEDVCC_3_
73    | IN4   |   1  |    |        |                 |       |
74    | TDO   |   -  |    |        |                 |       |
75    | VCC   |   -  |    |        |                 |       |
76    | GND   |   -  |    |        |                 |       |
77    | IN5   |   1  |    |        |                 |       |
78    |  I_O  |   1  |O12 |    *   |LVCMOS18         | Output|LEDVCC_2_
79    |  I_O  |   1  |O10 |        |                 |       |
80    |  I_O  |   1  |O6  |        |                 |       |
81    |  I_O  |   1  |O2  |        |                 |       |
82    |GNDIO1 |   -  |    |        |                 |       |
83    |VCCIO1 |   -  |    |        |                 |       |
84    |  I_O  |   1  |P12 |        |                 |       |
85    |  I_O  |   1  |P10 |        |                 |       |
86    |  I_O  |   1  |P6  |        |                 |       |
87    | I_O/OE|   1  |P2  |        |                 |       |
88    |INCLK3 |   1  |    |    *   |LVCMOS18         | Input |clkh
89    |INCLK0 |   0  |    |        |                 |       |
90    | VCC   |   -  |    |        |                 |       |
91    | I_O/OE|   0  |A2  |        |                 |       |
92    |  I_O  |   0  |A6  |        |                 |       |
93    |  I_O  |   0  |A10 |        |                 |       |
94    |  I_O  |   0  |A12 |        |                 |       |
95    |VCCIO0 |   -  |    |        |                 |       |
96    |GNDIO0 |   -  |    |        |                 |       |
97    |  I_O  |   0  |B2  |        |                 |       |
98    |  I_O  |   0  |B6  |        |                 |       |
99    |  I_O  |   0  |B10 |        |                 |       |
100   |  I_O  |   0  |B12 |        |                 |       |
----------------------------------------------------------------------------------------

<Note> GLB Pad : This notation refers to the GLB I/O pad number in the device.
<Note> Assigned Pin : user or dedicated input assignment (E.g. Clock pins).
<Note> Pin Type : 
          ClkIn : Dedicated input or clock pin 
           CLK  : Dedicated clock pin
           I_O  : Input/Output pin
           INP  : Dedicated input pin
           JTAG : JTAG Control and test pin
           NC   : No connected



Input_Signal_List
~~~~~~~~~~~~~~~~~
                Input
         Pin    Fanout
 Pin GLB Type                       Pullup Signal
---------------------------------------------------
  88  -- INCLK     ----------------      Up clkh
  39  -- INCLK     ----------------      Up clkl
   3   C  I/O   1  ---D------------      Up keyClock
   4   C  I/O   2  --------IJ------      Up keyData
  49   J  I/O   1  -------------N--      Up reset
---------------------------------------------------



Output_Signal_List
~~~~~~~~~~~~~~~~~~
          I         C      P R P       O Output
          N         L Mc   R E U C O F B Fanout
 Pin GLB  P LL PTs  S Type E S P E E P P                     Slew Pullup Signal
----------------------------------------------------------------------------------
  54   K  2  -   1  1 COM                   ----------------  Fast     Up LEDVCC_0_
  55   K  2  -   1  1 COM                   ----------------  Fast     Up LEDVCC_1_
  78   O  2  -   1  1 COM                   ----------------  Fast     Up LEDVCC_2_
  72   N  2  -   1  1 COM                   ----------------  Fast     Up LEDVCC_3_
  58   L  6  -   5  1 COM                   ----------------  Fast     Up show_0_
  60   L  6  -   4  1 COM                   ----------------  Fast     Up show_1_
  65   M  6  -   2  1 COM                   ----------------  Fast     Up show_2_
  64   M  6  -   5  1 COM                   ----------------  Fast     Up show_3_
  66   M  6  -   3  1 COM                   ----------------  Fast     Up show_4_
  56   K  6  -   4  1 COM                   ----------------  Fast     Up show_5_
  61   L  6  -   4  1 COM                   ----------------  Fast     Up show_6_
----------------------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        FP = Fast path used
       OBP = ORP bypass used



Bidir_Signal_List
~~~~~~~~~~~~~~~~~
          I         C      P R P       O Bidir
          N         L Mc   R E U C O F B Fanout
 Pin GLB  P LL PTs  S Type E S P E E P P                     Slew Pullup Signal
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        FP = Fast path used
       OBP = ORP bypass used



Buried_Signal_List
~~~~~~~~~~~~~~~~~~
        I         C      P R P       Node
        N         L Mc   R E U C I F Fanout
Mc GLB  P LL PTs  S Type E S P E R P                     Signal
----------------------------------------------------------------------------------
10   N  1  -   1  1 DFF      R       8  --CDEFGHIJ------  button0_d1_q_0_
 3   C  1  1   2  2 DFF      R       8  --CDEFGHIJ------  button0_d2_q_0_
 5   C  1  1   2  1 DFF      R       8  --CDEFGHIJ------  button0_d3_q_0_
10   O  1  1   1  1 DFF      R       6  ----------KLMNOP  dynamicshow_counter4_q_1_
 7   P  2  1   2  1 DFF      R       6  ----------KLMNOP  dynamicshow_counter4_q_2_
 0   I  7  1   4  1 DFF      R *     1  --------I-------  ps_RxData_1_
 5   E  5  -   3  1 COM              2  --------IJ------  ps_RxData_1__0
 0   J  7  1   4  1 DFF      R *     1  ---------J------  ps_RxData_2_
 1   I  7  1   4  1 DFF      R *     1  --------I-------  ps_RxData_3_
 1   J  7  1   4  1 DFF      R *     1  ---------J------  ps_RxData_4_
 2   I  7  1   4  1 DFF      R *     1  --------I-------  ps_RxData_5_
 2   J  7  1   4  1 DFF      R *     1  ---------J------  ps_RxData_6_
 3   I  7  1   4  1 DFF      R *     1  --------I-------  ps_RxData_7_
 3   J  7  1   4  1 DFF      R *     1  ---------J------  ps_RxData_8_
 3   H  8  1   2  1 DFF  *   S *     3  --C-----IJ------  ps_RxEn
10   E  9  1   2  1 DFF    * R *     4  ----E--HIJ------  ps_counter_0_
 2   E  9  1   3  1 DFF    * R *     4  ----E--HIJ------  ps_counter_1_
 1   H  9  1   3  1 DFF    * R *     4  ----E--HIJ------  ps_counter_2_
 6   H  9  1   2  1 DFF    * R *     4  ----E--HIJ------  ps_counter_3_
 9   D  4  -   1  1 DFF    * R       1  ---------J------  ps_keyClock_r0
12   J  4  1   1  1 DFF    * R       2  ----E--H--------  ps_keyClock_r1
10   H  4  1   1  1 DFF    * R       2  ----E--H--------  ps_keyClock_r2
 5   I  5  1   2  1 DFF  *   S       8  ABCD-FG------NO-  ps_lastRxData_0_
 4   J  5  1   2  1 DFF    * R       8  ABCD-FG------NO-  ps_lastRxData_1_
 7   I  5  1   2  1 DFF  *   S       8  ABCD-FG------NO-  ps_lastRxData_2_
 5   J  5  1   2  1 DFF    * R       8  ABCD-FG------NO-  ps_lastRxData_3_
 9   I  5  1   2  1 DFF    * R       8  ABCD-FG------NO-  ps_lastRxData_4_
 7   J  5  1   2  1 DFF    * R       8  ABCD-FG------NO-  ps_lastRxData_5_
12   I  5  1   2  1 DFF  *   S       8  ABCD-FG------NO-  ps_lastRxData_6_
 9   J  5  1   2  1 DFF    * R       8  ABCD-FG------NO-  ps_lastRxData_7_
 7   C 12  1   2  1 DFF    * R       4  --CD-FG---------  ps_ledEn
 1   C 13  1  13  3 LAT    * R       3  ----------KLM---  ps_psData_0_
 4   G 13  1  13  3 LAT    * R       3  ----------KLM---  ps_psData_1_
 4   F 13  1  13  3 LAT    * R       3  ----------KLM---  ps_psData_2_
 3   D 13  1  12  3 LAT    * R       3  ----------KLM---  ps_psData_3_
 5   O 10  1  13  3 LAT      R       2  --C-----------O-  ps_save_0_
11   C  4  -   2  1 COM              4  AB-----------NO-  ps_save_0__0
 4   A 10  1  13  3 LAT      R       2  A-----G---------  ps_save_1_
 4   B 10  1  13  3 LAT      R       2  -B---F----------  ps_save_2_
 5   N 10  1  12  3 LAT      R       2  ---D---------N--  ps_save_3_
----------------------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        IR = Input register
        FP = Fast path used
       OBP = ORP bypass used



PostFit_Equations
~~~~~~~~~~~~~~~~~
LEDVCC_0_ = !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q ; (1 pterm, 2 signals)

LEDVCC_1_ = dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q ; (1 pterm, 2 signals)

LEDVCC_2_ = !dynamicshow_counter4_q_1_.Q & dynamicshow_counter4_q_2_.Q ; (1 pterm, 2 signals)

LEDVCC_3_ = dynamicshow_counter4_q_1_.Q & dynamicshow_counter4_q_2_.Q ; (1 pterm, 2 signals)

button0_d1_q_0_.D = reset ; (1 pterm, 1 signal)
button0_d1_q_0_.C = clkl ; (1 pterm, 1 signal)

button0_d2_q_0_.D = button0_d1_q_0_.Q ; (1 pterm, 1 signal)
button0_d2_q_0_.C = clkl ; (1 pterm, 1 signal)

button0_d3_q_0_.D = button0_d2_q_0_.Q ; (1 pterm, 1 signal)
button0_d3_q_0_.C = clkl ; (1 pterm, 1 signal)

dynamicshow_counter4_q_1_.D = !dynamicshow_counter4_q_1_.Q ; (1 pterm, 1 signal)
dynamicshow_counter4_q_1_.C = clkl ; (1 pterm, 1 signal)

dynamicshow_counter4_q_2_.D = dynamicshow_counter4_q_1_.Q
       & !dynamicshow_counter4_q_2_.Q
    # !dynamicshow_counter4_q_1_.Q & dynamicshow_counter4_q_2_.Q ; (2 pterms, 2 signals)
dynamicshow_counter4_q_2_.C = clkl ; (1 pterm, 1 signal)

ps_RxData_1_.D.X1 = !keyData & ps_counter_0_.Q & !ps_counter_1_.Q
       & !ps_counter_2_.Q & !ps_counter_3_.Q & ps_RxData_1_.Q
    # keyData & ps_counter_0_.Q & !ps_counter_1_.Q & !ps_counter_2_.Q
       & !ps_counter_3_.Q & !ps_RxData_1_.Q ; (2 pterms, 6 signals)
ps_RxData_1_.D.X2 = ps_RxData_1_.Q ; (1 pterm, 1 signal)
ps_RxData_1_.C = clkh ; (1 pterm, 1 signal)
ps_RxData_1_.CE = ps_RxData_1__0 ; (1 pterm, 1 signal)

ps_RxData_1__0 = button0_d1_q_0_.Q & !ps_keyClock_r1.Q & ps_keyClock_r2.Q
    # button0_d2_q_0_.Q & !ps_keyClock_r1.Q & ps_keyClock_r2.Q
    # button0_d3_q_0_.Q & !ps_keyClock_r1.Q & ps_keyClock_r2.Q ; (3 pterms, 5 signals)

ps_RxData_2_.D.X1 = !keyData & !ps_counter_0_.Q & ps_counter_1_.Q
       & !ps_counter_2_.Q & !ps_counter_3_.Q & ps_RxData_2_.Q
    # keyData & !ps_counter_0_.Q & ps_counter_1_.Q & !ps_counter_2_.Q
       & !ps_counter_3_.Q & !ps_RxData_2_.Q ; (2 pterms, 6 signals)
ps_RxData_2_.D.X2 = ps_RxData_2_.Q ; (1 pterm, 1 signal)
ps_RxData_2_.C = clkh ; (1 pterm, 1 signal)
ps_RxData_2_.CE = ps_RxData_1__0 ; (1 pterm, 1 signal)

ps_RxData_3_.D.X1 = !keyData & ps_counter_0_.Q & ps_counter_1_.Q
       & !ps_counter_2_.Q & !ps_counter_3_.Q & ps_RxData_3_.Q
    # keyData & ps_counter_0_.Q & ps_counter_1_.Q & !ps_counter_2_.Q
       & !ps_counter_3_.Q & !ps_RxData_3_.Q ; (2 pterms, 6 signals)
ps_RxData_3_.D.X2 = ps_RxData_3_.Q ; (1 pterm, 1 signal)
ps_RxData_3_.C = clkh ; (1 pterm, 1 signal)
ps_RxData_3_.CE = ps_RxData_1__0 ; (1 pterm, 1 signal)

ps_RxData_4_.D.X1 = !keyData & !ps_counter_0_.Q & !ps_counter_1_.Q
       & ps_counter_2_.Q & !ps_counter_3_.Q & ps_RxData_4_.Q
    # keyData & !ps_counter_0_.Q & !ps_counter_1_.Q & ps_counter_2_.Q
       & !ps_counter_3_.Q & !ps_RxData_4_.Q ; (2 pterms, 6 signals)
ps_RxData_4_.D.X2 = ps_RxData_4_.Q ; (1 pterm, 1 signal)
ps_RxData_4_.C = clkh ; (1 pterm, 1 signal)
ps_RxData_4_.CE = ps_RxData_1__0 ; (1 pterm, 1 signal)

ps_RxData_5_.D.X1 = !keyData & ps_counter_0_.Q & !ps_counter_1_.Q
       & ps_counter_2_.Q & !ps_counter_3_.Q & ps_RxData_5_.Q
    # keyData & ps_counter_0_.Q & !ps_counter_1_.Q & ps_counter_2_.Q
       & !ps_counter_3_.Q & !ps_RxData_5_.Q ; (2 pterms, 6 signals)
ps_RxData_5_.D.X2 = ps_RxData_5_.Q ; (1 pterm, 1 signal)
ps_RxData_5_.C = clkh ; (1 pterm, 1 signal)
ps_RxData_5_.CE = ps_RxData_1__0 ; (1 pterm, 1 signal)

ps_RxData_6_.D.X1 = !keyData & !ps_counter_0_.Q & ps_counter_1_.Q
       & ps_counter_2_.Q & !ps_counter_3_.Q & ps_RxData_6_.Q
    # keyData & !ps_counter_0_.Q & ps_counter_1_.Q & ps_counter_2_.Q
       & !ps_counter_3_.Q & !ps_RxData_6_.Q ; (2 pterms, 6 signals)
ps_RxData_6_.D.X2 = ps_RxData_6_.Q ; (1 pterm, 1 signal)
ps_RxData_6_.C = clkh ; (1 pterm, 1 signal)
ps_RxData_6_.CE = ps_RxData_1__0 ; (1 pterm, 1 signal)

ps_RxData_7_.D.X1 = !keyData & ps_counter_0_.Q & ps_counter_1_.Q
       & ps_counter_2_.Q & !ps_counter_3_.Q & ps_RxData_7_.Q
    # keyData & ps_counter_0_.Q & ps_counter_1_.Q & ps_counter_2_.Q
       & !ps_counter_3_.Q & !ps_RxData_7_.Q ; (2 pterms, 6 signals)
ps_RxData_7_.D.X2 = ps_RxData_7_.Q ; (1 pterm, 1 signal)
ps_RxData_7_.C = clkh ; (1 pterm, 1 signal)
ps_RxData_7_.CE = ps_RxData_1__0 ; (1 pterm, 1 signal)

ps_RxData_8_.D.X1 = !keyData & !ps_counter_0_.Q & !ps_counter_1_.Q
       & !ps_counter_2_.Q & ps_counter_3_.Q & ps_RxData_8_.Q
    # keyData & !ps_counter_0_.Q & !ps_counter_1_.Q & !ps_counter_2_.Q
       & ps_counter_3_.Q & !ps_RxData_8_.Q ; (2 pterms, 6 signals)
ps_RxData_8_.D.X2 = ps_RxData_8_.Q ; (1 pterm, 1 signal)
ps_RxData_8_.C = clkh ; (1 pterm, 1 signal)
ps_RxData_8_.CE = ps_RxData_1__0 ; (1 pterm, 1 signal)

ps_RxEn.D = !ps_counter_1_.Q & !ps_counter_2_.Q
    # !ps_counter_3_.Q ; (2 pterms, 3 signals)
ps_RxEn.C = clkh ; (1 pterm, 1 signal)
ps_RxEn.CE = !ps_keyClock_r1.Q & ps_keyClock_r2.Q ; (1 pterm, 2 signals)
ps_RxEn.AP = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_counter_0_.D = !ps_counter_0_.Q & !ps_counter_1_.Q & !ps_counter_2_.Q
    # !ps_counter_0_.Q & !ps_counter_3_.Q ; (2 pterms, 4 signals)
ps_counter_0_.C = clkh ; (1 pterm, 1 signal)
ps_counter_0_.CE = !ps_keyClock_r1.Q & ps_keyClock_r2.Q ; (1 pterm, 2 signals)
ps_counter_0_.AR = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q
       & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_counter_1_.D = ps_counter_0_.Q & !ps_counter_1_.Q & !ps_counter_2_.Q
    # !ps_counter_0_.Q & ps_counter_1_.Q & !ps_counter_3_.Q
    # ps_counter_0_.Q & !ps_counter_1_.Q & !ps_counter_3_.Q ; (3 pterms, 4 signals)
ps_counter_1_.C = clkh ; (1 pterm, 1 signal)
ps_counter_1_.CE = !ps_keyClock_r1.Q & ps_keyClock_r2.Q ; (1 pterm, 2 signals)
ps_counter_1_.AR = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q
       & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_counter_2_.D = ps_counter_0_.Q & ps_counter_1_.Q & !ps_counter_2_.Q
       & !ps_counter_3_.Q
    # !ps_counter_1_.Q & ps_counter_2_.Q & !ps_counter_3_.Q
    # !ps_counter_0_.Q & ps_counter_2_.Q & !ps_counter_3_.Q ; (3 pterms, 4 signals)
ps_counter_2_.C = clkh ; (1 pterm, 1 signal)
ps_counter_2_.CE = !ps_keyClock_r1.Q & ps_keyClock_r2.Q ; (1 pterm, 2 signals)
ps_counter_2_.AR = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q
       & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_counter_3_.D = ps_counter_0_.Q & ps_counter_1_.Q & ps_counter_2_.Q
       & !ps_counter_3_.Q
    # !ps_counter_1_.Q & !ps_counter_2_.Q & ps_counter_3_.Q ; (2 pterms, 4 signals)
ps_counter_3_.C = clkh ; (1 pterm, 1 signal)
ps_counter_3_.CE = !ps_keyClock_r1.Q & ps_keyClock_r2.Q ; (1 pterm, 2 signals)
ps_counter_3_.AR = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q
       & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_keyClock_r0.D = keyClock ; (1 pterm, 1 signal)
ps_keyClock_r0.C = clkh ; (1 pterm, 1 signal)
ps_keyClock_r0.AR = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q
       & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_keyClock_r1.D = ps_keyClock_r0.Q ; (1 pterm, 1 signal)
ps_keyClock_r1.C = clkh ; (1 pterm, 1 signal)
ps_keyClock_r1.AR = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q
       & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_keyClock_r2.D = ps_keyClock_r1.Q ; (1 pterm, 1 signal)
ps_keyClock_r2.C = clkh ; (1 pterm, 1 signal)
ps_keyClock_r2.AR = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q
       & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_lastRxData_0_.D = ps_RxData_1_.Q ; (1 pterm, 1 signal)
ps_lastRxData_0_.C = !ps_RxEn.Q ; (1 pterm, 1 signal)
ps_lastRxData_0_.AP = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q
       & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_lastRxData_1_.D = ps_RxData_2_.Q ; (1 pterm, 1 signal)
ps_lastRxData_1_.C = !ps_RxEn.Q ; (1 pterm, 1 signal)
ps_lastRxData_1_.AR = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q
       & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_lastRxData_2_.D = ps_RxData_3_.Q ; (1 pterm, 1 signal)
ps_lastRxData_2_.C = !ps_RxEn.Q ; (1 pterm, 1 signal)
ps_lastRxData_2_.AP = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q
       & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_lastRxData_3_.D = ps_RxData_4_.Q ; (1 pterm, 1 signal)
ps_lastRxData_3_.C = !ps_RxEn.Q ; (1 pterm, 1 signal)
ps_lastRxData_3_.AR = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q
       & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_lastRxData_4_.D = ps_RxData_5_.Q ; (1 pterm, 1 signal)
ps_lastRxData_4_.C = !ps_RxEn.Q ; (1 pterm, 1 signal)
ps_lastRxData_4_.AR = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q
       & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_lastRxData_5_.D = ps_RxData_6_.Q ; (1 pterm, 1 signal)
ps_lastRxData_5_.C = !ps_RxEn.Q ; (1 pterm, 1 signal)
ps_lastRxData_5_.AR = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q
       & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_lastRxData_6_.D = ps_RxData_7_.Q ; (1 pterm, 1 signal)
ps_lastRxData_6_.C = !ps_RxEn.Q ; (1 pterm, 1 signal)
ps_lastRxData_6_.AP = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q
       & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_lastRxData_7_.D = ps_RxData_8_.Q ; (1 pterm, 1 signal)
ps_lastRxData_7_.C = !ps_RxEn.Q ; (1 pterm, 1 signal)
ps_lastRxData_7_.AR = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q
       & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_ledEn.D = !ps_lastRxData_0_.Q & !ps_lastRxData_1_.Q & !ps_lastRxData_2_.Q
       & !ps_lastRxData_3_.Q & ps_lastRxData_4_.Q & ps_lastRxData_5_.Q
       & ps_lastRxData_6_.Q & ps_lastRxData_7_.Q ; (1 pterm, 8 signals)
ps_ledEn.C = !ps_RxEn.Q ; (1 pterm, 1 signal)
ps_ledEn.AR = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_psData_0_.D = !ps_lastRxData_0_.Q & !ps_lastRxData_1_.Q & ps_save_0_.Q
    # ps_lastRxData_1_.Q & !ps_lastRxData_4_.Q & ps_save_0_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_6_.Q & ps_save_0_.Q
    # !ps_lastRxData_1_.Q & !ps_lastRxData_5_.Q & !ps_lastRxData_6_.Q
       & ps_save_0_.Q
    # ps_lastRxData_0_.Q & ps_lastRxData_4_.Q & ps_save_0_.Q
    # ps_lastRxData_3_.Q & !ps_lastRxData_4_.Q & ps_save_0_.Q
    # ps_lastRxData_0_.Q & !ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & ps_lastRxData_3_.Q & ps_lastRxData_4_.Q & ps_lastRxData_5_.Q
       & !ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & !ps_lastRxData_3_.Q & !ps_lastRxData_4_.Q & !ps_lastRxData_5_.Q
       & ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & !ps_lastRxData_3_.Q & ps_lastRxData_4_.Q & !ps_lastRxData_5_.Q
       & !ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & !ps_lastRxData_4_.Q & ps_lastRxData_5_.Q & !ps_lastRxData_6_.Q
       & !ps_lastRxData_7_.Q
    # ps_lastRxData_5_.Q & ps_lastRxData_6_.Q & ps_save_0_.Q
    # !ps_lastRxData_2_.Q & ps_save_0_.Q
    # ps_lastRxData_7_.Q & ps_save_0_.Q ; (13 pterms, 9 signals)
ps_psData_0_.LH = !ps_ledEn.Q ; (1 pterm, 1 signal)
ps_psData_0_.AR = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_psData_1_.D = !ps_lastRxData_1_.Q & ps_lastRxData_3_.Q & ps_save_1_.Q
    # !ps_lastRxData_1_.Q & ps_lastRxData_4_.Q & ps_save_1_.Q
    # !ps_lastRxData_4_.Q & !ps_lastRxData_5_.Q & !ps_lastRxData_6_.Q
       & ps_save_1_.Q
    # ps_lastRxData_3_.Q & !ps_lastRxData_5_.Q & ps_save_1_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & ps_lastRxData_3_.Q & ps_lastRxData_4_.Q & !ps_lastRxData_5_.Q
       & !ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # ps_lastRxData_0_.Q & !ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & ps_lastRxData_3_.Q & ps_lastRxData_4_.Q & ps_lastRxData_5_.Q
       & !ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & !ps_lastRxData_3_.Q & ps_lastRxData_5_.Q & !ps_lastRxData_6_.Q
       & !ps_lastRxData_7_.Q
    # ps_lastRxData_5_.Q & ps_lastRxData_6_.Q & ps_save_1_.Q
    # ps_lastRxData_4_.Q & ps_lastRxData_6_.Q & ps_save_1_.Q
    # !ps_lastRxData_0_.Q & !ps_lastRxData_1_.Q & ps_save_1_.Q
    # ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_save_1_.Q
    # ps_lastRxData_7_.Q & ps_save_1_.Q
    # !ps_lastRxData_2_.Q & ps_save_1_.Q ; (13 pterms, 9 signals)
ps_psData_1_.LH = !ps_ledEn.Q ; (1 pterm, 1 signal)
ps_psData_1_.AR = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_psData_2_.D = !ps_lastRxData_1_.Q & !ps_lastRxData_6_.Q & ps_save_2_.Q
    # ps_lastRxData_3_.Q & !ps_lastRxData_4_.Q & ps_save_2_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & ps_lastRxData_3_.Q & !ps_lastRxData_4_.Q & ps_lastRxData_5_.Q
       & !ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & !ps_lastRxData_3_.Q & ps_lastRxData_4_.Q & ps_lastRxData_5_.Q
       & !ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # ps_lastRxData_0_.Q & !ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & !ps_lastRxData_3_.Q & !ps_lastRxData_4_.Q & ps_lastRxData_5_.Q
       & !ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # ps_lastRxData_0_.Q & !ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & ps_lastRxData_3_.Q & ps_lastRxData_4_.Q & ps_lastRxData_5_.Q
       & !ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # !ps_lastRxData_4_.Q & !ps_lastRxData_5_.Q & !ps_lastRxData_6_.Q
       & ps_save_2_.Q
    # !ps_lastRxData_0_.Q & !ps_lastRxData_1_.Q & ps_save_2_.Q
    # ps_lastRxData_4_.Q & ps_lastRxData_6_.Q & ps_save_2_.Q
    # ps_lastRxData_5_.Q & ps_lastRxData_6_.Q & ps_save_2_.Q
    # ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_save_2_.Q
    # !ps_lastRxData_2_.Q & ps_save_2_.Q
    # ps_lastRxData_7_.Q & ps_save_2_.Q ; (13 pterms, 9 signals)
ps_psData_2_.LH = !ps_ledEn.Q ; (1 pterm, 1 signal)
ps_psData_2_.AR = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_psData_3_.D = !ps_lastRxData_1_.Q & !ps_lastRxData_3_.Q
       & ps_lastRxData_4_.Q & ps_save_3_.Q
    # !ps_lastRxData_0_.Q & !ps_lastRxData_4_.Q & !ps_lastRxData_5_.Q
       & ps_save_3_.Q
    # !ps_lastRxData_1_.Q & ps_lastRxData_3_.Q & !ps_lastRxData_4_.Q
       & ps_save_3_.Q
    # !ps_lastRxData_1_.Q & !ps_lastRxData_5_.Q & !ps_lastRxData_6_.Q
       & ps_save_3_.Q
    # ps_lastRxData_4_.Q & ps_lastRxData_6_.Q & ps_save_3_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & ps_lastRxData_3_.Q & ps_lastRxData_4_.Q & ps_lastRxData_5_.Q
       & !ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & !ps_lastRxData_3_.Q & !ps_lastRxData_4_.Q & !ps_lastRxData_5_.Q
       & ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # ps_lastRxData_5_.Q & ps_lastRxData_6_.Q & ps_save_3_.Q
    # !ps_lastRxData_0_.Q & !ps_lastRxData_1_.Q & ps_save_3_.Q
    # ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_save_3_.Q
    # ps_lastRxData_7_.Q & ps_save_3_.Q
    # !ps_lastRxData_2_.Q & ps_save_3_.Q ; (12 pterms, 9 signals)
ps_psData_3_.LH = !ps_ledEn.Q ; (1 pterm, 1 signal)
ps_psData_3_.AR = !button0_d1_q_0_.Q & !button0_d2_q_0_.Q & !button0_d3_q_0_.Q ; (1 pterm, 3 signals)

ps_save_0_.D = !ps_lastRxData_0_.Q & !ps_lastRxData_1_.Q & ps_save_0_.Q
    # !ps_lastRxData_1_.Q & ps_lastRxData_3_.Q & ps_save_0_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_6_.Q & ps_save_0_.Q
    # !ps_lastRxData_1_.Q & !ps_lastRxData_5_.Q & !ps_lastRxData_6_.Q
       & ps_save_0_.Q
    # ps_lastRxData_1_.Q & !ps_lastRxData_4_.Q & ps_save_0_.Q
    # ps_lastRxData_0_.Q & ps_lastRxData_4_.Q & ps_save_0_.Q
    # ps_lastRxData_0_.Q & !ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & ps_lastRxData_3_.Q & ps_lastRxData_4_.Q & ps_lastRxData_5_.Q
       & !ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & !ps_lastRxData_3_.Q & !ps_lastRxData_4_.Q & !ps_lastRxData_5_.Q
       & ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & !ps_lastRxData_3_.Q & ps_lastRxData_4_.Q & !ps_lastRxData_5_.Q
       & !ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & !ps_lastRxData_4_.Q & ps_lastRxData_5_.Q & !ps_lastRxData_6_.Q
       & !ps_lastRxData_7_.Q
    # ps_lastRxData_5_.Q & ps_lastRxData_6_.Q & ps_save_0_.Q
    # !ps_lastRxData_2_.Q & ps_save_0_.Q
    # ps_lastRxData_7_.Q & ps_save_0_.Q ; (13 pterms, 9 signals)
ps_save_0_.LH = !( ps_save_0__0 ) ; (1 pterm, 1 signal)

ps_save_0__0 = ps_ledEn.Q
    # !button0_d1_q_0_.Q & !button0_d2_q_0_.Q & !button0_d3_q_0_.Q ; (2 pterms, 4 signals)

ps_save_1_.D = !ps_lastRxData_1_.Q & ps_lastRxData_3_.Q & ps_save_1_.Q
    # !ps_lastRxData_1_.Q & ps_lastRxData_4_.Q & ps_save_1_.Q
    # ps_lastRxData_3_.Q & ps_lastRxData_6_.Q & ps_save_1_.Q
    # !ps_lastRxData_4_.Q & !ps_lastRxData_5_.Q & !ps_lastRxData_6_.Q
       & ps_save_1_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & ps_lastRxData_3_.Q & ps_lastRxData_4_.Q & !ps_lastRxData_5_.Q
       & !ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # ps_lastRxData_0_.Q & !ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & ps_lastRxData_3_.Q & ps_lastRxData_4_.Q & ps_lastRxData_5_.Q
       & !ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & !ps_lastRxData_3_.Q & ps_lastRxData_5_.Q & !ps_lastRxData_6_.Q
       & !ps_lastRxData_7_.Q
    # ps_lastRxData_5_.Q & ps_lastRxData_6_.Q & ps_save_1_.Q
    # ps_lastRxData_4_.Q & ps_lastRxData_6_.Q & ps_save_1_.Q
    # !ps_lastRxData_0_.Q & !ps_lastRxData_1_.Q & ps_save_1_.Q
    # ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_save_1_.Q
    # ps_lastRxData_7_.Q & ps_save_1_.Q
    # !ps_lastRxData_2_.Q & ps_save_1_.Q ; (13 pterms, 9 signals)
ps_save_1_.LH = !( ps_save_0__0 ) ; (1 pterm, 1 signal)

ps_save_2_.D = !ps_lastRxData_1_.Q & !ps_lastRxData_6_.Q & ps_save_2_.Q
    # ps_lastRxData_3_.Q & !ps_lastRxData_4_.Q & ps_save_2_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & ps_lastRxData_3_.Q & !ps_lastRxData_4_.Q & ps_lastRxData_5_.Q
       & !ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & !ps_lastRxData_3_.Q & ps_lastRxData_4_.Q & ps_lastRxData_5_.Q
       & !ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # ps_lastRxData_0_.Q & !ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & !ps_lastRxData_3_.Q & !ps_lastRxData_4_.Q & ps_lastRxData_5_.Q
       & !ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # ps_lastRxData_0_.Q & !ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & ps_lastRxData_3_.Q & ps_lastRxData_4_.Q & ps_lastRxData_5_.Q
       & !ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # !ps_lastRxData_4_.Q & !ps_lastRxData_5_.Q & !ps_lastRxData_6_.Q
       & ps_save_2_.Q
    # !ps_lastRxData_0_.Q & !ps_lastRxData_1_.Q & ps_save_2_.Q
    # ps_lastRxData_4_.Q & ps_lastRxData_6_.Q & ps_save_2_.Q
    # ps_lastRxData_5_.Q & ps_lastRxData_6_.Q & ps_save_2_.Q
    # ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_save_2_.Q
    # !ps_lastRxData_2_.Q & ps_save_2_.Q
    # ps_lastRxData_7_.Q & ps_save_2_.Q ; (13 pterms, 9 signals)
ps_save_2_.LH = !( ps_save_0__0 ) ; (1 pterm, 1 signal)

ps_save_3_.D = !ps_lastRxData_1_.Q & !ps_lastRxData_3_.Q & ps_lastRxData_4_.Q
       & ps_save_3_.Q
    # !ps_lastRxData_0_.Q & !ps_lastRxData_4_.Q & !ps_lastRxData_5_.Q
       & ps_save_3_.Q
    # !ps_lastRxData_1_.Q & ps_lastRxData_3_.Q & !ps_lastRxData_4_.Q
       & ps_save_3_.Q
    # !ps_lastRxData_1_.Q & !ps_lastRxData_5_.Q & !ps_lastRxData_6_.Q
       & ps_save_3_.Q
    # ps_lastRxData_4_.Q & ps_lastRxData_6_.Q & ps_save_3_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & ps_lastRxData_3_.Q & ps_lastRxData_4_.Q & ps_lastRxData_5_.Q
       & !ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # !ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_lastRxData_2_.Q
       & !ps_lastRxData_3_.Q & !ps_lastRxData_4_.Q & !ps_lastRxData_5_.Q
       & ps_lastRxData_6_.Q & !ps_lastRxData_7_.Q
    # ps_lastRxData_5_.Q & ps_lastRxData_6_.Q & ps_save_3_.Q
    # !ps_lastRxData_0_.Q & !ps_lastRxData_1_.Q & ps_save_3_.Q
    # ps_lastRxData_0_.Q & ps_lastRxData_1_.Q & ps_save_3_.Q
    # ps_lastRxData_7_.Q & ps_save_3_.Q
    # !ps_lastRxData_2_.Q & ps_save_3_.Q ; (12 pterms, 9 signals)
ps_save_3_.LH = !( ps_save_0__0 ) ; (1 pterm, 1 signal)

show_0_ = !( !ps_psData_0_.Q & ps_psData_2_.Q & !ps_psData_3_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q
    # !ps_psData_0_.Q & ps_psData_1_.Q & !ps_psData_2_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q
    # !ps_psData_1_.Q & ps_psData_2_.Q & !ps_psData_3_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q
    # !ps_psData_1_.Q & !ps_psData_2_.Q & ps_psData_3_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q
    # ps_psData_1_.Q & !ps_psData_2_.Q & !ps_psData_3_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q ) ; (5 pterms, 6 signals)

show_1_ = !( !ps_psData_0_.Q & !ps_psData_1_.Q & !ps_psData_2_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q
    # !ps_psData_0_.Q & ps_psData_2_.Q & !ps_psData_3_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q
    # !ps_psData_1_.Q & !ps_psData_2_.Q & ps_psData_3_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q
    # !ps_psData_1_.Q & ps_psData_2_.Q & !ps_psData_3_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q ) ; (4 pterms, 6 signals)

show_2_ = !( !ps_psData_0_.Q & ps_psData_1_.Q & !ps_psData_3_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q
    # !ps_psData_0_.Q & !ps_psData_1_.Q & !ps_psData_2_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q ) ; (2 pterms, 6 signals)

show_3_ = !( !ps_psData_0_.Q & !ps_psData_2_.Q & !ps_psData_3_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q
    # ps_psData_0_.Q & !ps_psData_1_.Q & ps_psData_2_.Q & !ps_psData_3_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q
    # !ps_psData_0_.Q & ps_psData_1_.Q & !ps_psData_3_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q
    # !ps_psData_1_.Q & !ps_psData_2_.Q & ps_psData_3_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q
    # ps_psData_1_.Q & !ps_psData_2_.Q & !ps_psData_3_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q ) ; (5 pterms, 6 signals)

show_4_ = !( !ps_psData_1_.Q & !ps_psData_2_.Q & !dynamicshow_counter4_q_1_.Q
       & !dynamicshow_counter4_q_2_.Q
    # ps_psData_2_.Q & !ps_psData_3_.Q & !dynamicshow_counter4_q_1_.Q
       & !dynamicshow_counter4_q_2_.Q
    # ps_psData_0_.Q & !ps_psData_3_.Q & !dynamicshow_counter4_q_1_.Q
       & !dynamicshow_counter4_q_2_.Q ) ; (3 pterms, 6 signals)

show_5_ = !( ps_psData_0_.Q & ps_psData_1_.Q & !ps_psData_3_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q
    # !ps_psData_0_.Q & !ps_psData_1_.Q & !ps_psData_3_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q
    # !ps_psData_1_.Q & !ps_psData_2_.Q & !dynamicshow_counter4_q_1_.Q
       & !dynamicshow_counter4_q_2_.Q
    # !ps_psData_2_.Q & !ps_psData_3_.Q & !dynamicshow_counter4_q_1_.Q
       & !dynamicshow_counter4_q_2_.Q ) ; (4 pterms, 6 signals)

show_6_ = !( !ps_psData_0_.Q & !ps_psData_2_.Q & !ps_psData_3_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q
    # ps_psData_0_.Q & ps_psData_2_.Q & !ps_psData_3_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q
    # !ps_psData_1_.Q & !ps_psData_2_.Q & ps_psData_3_.Q
       & !dynamicshow_counter4_q_1_.Q & !dynamicshow_counter4_q_2_.Q
    # ps_psData_1_.Q & !ps_psData_3_.Q & !dynamicshow_counter4_q_1_.Q
       & !dynamicshow_counter4_q_2_.Q ) ; (4 pterms, 6 signals)




